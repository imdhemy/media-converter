#!/bin/bash

# Check if FFMPEG is installed
if ! [ -x "$(command -v ffmpeg)" ]; then
  echo "ERROR: ffmpeg is not installed." >&2
  echo "INFO: You can install ffmpeg by running: \`brew install ffmpeg\`" >&2
  exit 1
fi

# Converts an audio file to a different format
convert_audio() {
  echo "Converting audio...[$1] to [$3]"
  # arguments are: source, output_dir, output_ext
  source="$1"
  output_dir="$2"
  output_ext="$3"

  input_file_name="${source%.*}"
  output_file_name="${input_file_name##*/}"

  # Convert the source audio into the output extension
  ffmpeg -i "$source" -c:a libmp3lame -q:a 4 "$output_dir/$output_file_name.$output_ext"
}

# Converts a video file to a different format
convert_video() {
 echo "Converting video...[$1] to [$3]"
  # arguments are: source, output_dir, output_ext
  source="$1"
  output_dir="$2"
  output_ext="$3"

  input_file_name="${source%.*}"
  output_file_name="${input_file_name##*/}"

  # Convert the source video into the output extension
  ffmpeg -i "$source" -c:v libx264 -crf 23 -preset veryfast -c:a aac -b:a 128k "$output_dir/$output_file_name.$output_ext"
}

# Converts all files in the given directory
convert_directory() {
  echo "INFO: Converting files in directory: $1"

  # Ask for MEDIA_TYPE (audio or video) audio is default
  read -r -e -p "Enter media type (audio or video) (audio): [a/v] " MEDIA_TYPE
  MEDIA_TYPE=${MEDIA_TYPE:-a}

  if [ "$MEDIA_TYPE" = "a" ]; then
    MEDIA_TYPE="audio"
  elif [ "$MEDIA_TYPE" = "v" ]; then
    MEDIA_TYPE="video"
  else
    MEDIA_TYPE="audio"
  fi

  # Ask for INPUT_EXT
  read -r -e -p "Enter input extension (mp3, mp4, 3gp ...): " INPUT_EXT

  # Ask for OUTPUT_EXT
  read -r -e -p "Enter output extension (mp3, mp4, 3gp ...): " OUTPUT_EXT

  # OUTPUT_DIR is the same as INPUT_DIR/OUTPUT_EXT
  OUTPUT_DIR="$1/$OUTPUT_EXT"
  mkdir -p "$OUTPUT_DIR"

  # Convert all files in the given directory with the given extension
  for file in "$1"/*."$INPUT_EXT"; do
    if [ -f "$file" ]; then
      if [ "$MEDIA_TYPE" = "audio" ]; then
        convert_audio "$file" "$OUTPUT_DIR" "$OUTPUT_EXT"
      elif [ "$MEDIA_TYPE" = "video" ]; then
        convert_video "$file" "$OUTPUT_DIR" "$OUTPUT_EXT"
      fi
    fi
  done
}

# Converts a single file
convert_file() {
  echo "INFO: Converting file: $1"

  # Get source directory from the source file path
  SOURCE_DIR=$(dirname "$1")

  # Read output directory or use source directory if not provided
  read -r -e -p "Enter output directory ($SOURCE_DIR): " OUTPUT_DIR
  OUTPUT_DIR=${OUTPUT_DIR:-$SOURCE_DIR}

  # Create output directory if it doesn't exist
  if [ ! -d "$OUTPUT_DIR" ]; then
    mkdir -p "$OUTPUT_DIR"
  fi

  # Ask for MEDIA_TYPE (audio or video) audio is default
  read -r -e -p "Enter media type (audio or video) (audio): [a/v] " MEDIA_TYPE
  MEDIA_TYPE=${MEDIA_TYPE:-a}

  if [ "$MEDIA_TYPE" = "a" ]; then
    MEDIA_TYPE="audio"
  elif [ "$MEDIA_TYPE" = "v" ]; then
    MEDIA_TYPE="video"
  else
    MEDIA_TYPE="audio"
  fi

  # Pass the source file and output directory to the appropriate function
  if [ "$MEDIA_TYPE" = "audio" ]; then
    # Ask for OUTPUT_EXT
    read -r -e -p "Enter output extension (e.g mp3, wav): " OUTPUT_EXT
    convert_audio "$1" "$OUTPUT_DIR" "$OUTPUT_EXT" "$OUTPUT_EXT"
  elif [ "$MEDIA_TYPE" = "video" ]; then
    # Ask for OUTPUT_EXT
    read -r -e -p "Enter output extension (e.g mp4, 3gp): " OUTPUT_EXT
    convert_video "$1" "$OUTPUT_DIR" "$OUTPUT_EXT"
  fi
}

# Read the source path
read -r -e -p "Source path: " source

# Check if the source path exists
if ! [ -e "$source" ]; then
  echo "ERROR: The source path does not exist." >&2
  exit 1
fi

# Check if the source path is a directory
if [ -d "$source" ]; then
  convert_directory "$source"
  exit 0
else
  convert_file "$source"
  exit 0
fi
